name: Deploy dev 

on:
  push:
    branches:
      - dev
    workflow_dispatch:
        inputs:
          destroy:
            description: 'Destroy infrastructure? (yes/no)'
            required: true
            default: 'no'
jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: aws
    
    env:
      AWS_DEFAULT_REGION: us-east-1 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Consider updating this if using newer features

    - name: Initialize Terraform
      run: terraform init -backend-config="bucket=ci-cd-state-2024" -backend-config="key=terraform.tfstate" -backend-config="region=us-east-1"

    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan
      # If needed, you can also output the plan to logs for debugging:
      # run: terraform plan

    - name: Apply Terraform changes
      if: github.ref == 'refs/heads/dev'
      run: terraform apply -input=false tfplan

    - name: Clean up
      run: rm tfplan

  destroy:
      runs-on: ubuntu-latest
      needs: terraform
      if: ${{ github.event.inputs.destroy == 'yes' }}
      environment: aws

      env:
        AWS_DEFAULT_REGION: us-east-1 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        run: terraform init

      - name: Destroy Terraform Managed Infrastructure
        run: terraform destroy --auto-approve
